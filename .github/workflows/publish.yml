name: Publish Website

on:
  push:
    branches: [main]

# Ensure only one workflow runs at a time
concurrency:
  group: "publish"
  cancel-in-progress: false

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
      actions: write
    steps:
      - uses: actions/checkout@v4

      - name: Cache Astro resources
        uses: actions/cache@v4
        with:
          path: |
            alchemy-web/.astro
          key: ${{ runner.os }}-astro-cache

      - name: Setup Alchemy Environment
        uses: ./.github/actions/setup-alchemy
        with:
          aws-role-arn: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: us-west-2

      - name: Get Astro version
        id: astro-version
        run: echo "version=$(bun info astro version)" >> $GITHUB_OUTPUT

      - name: Cache Astro cache
        uses: actions/cache@v4
        with:
          path: |
            alchemy-web/node_modules/.astro
            alchemy-web/.astro
          key: astro-cache-${{ steps.astro-version.outputs.version }}

      - name: Check Types and Lint
        run: |
          bun run build
          bun run check

      - name: Install Playwright Browsers
        run: bun playwright install --with-deps chromium
        working-directory: alchemy-web

      - name: Deploy Website
        id: deploy
        run: |
          bun run build
          bun install # to install the built `alchemy` CLI
          bun deploy:website
        env:
          ALCHEMY_PASSWORD: ${{ env.ALCHEMY_PASSWORD }}
          ALCHEMY_STATE_STORE: cloudflare
          ALCHEMY_STATE_TOKEN: ${{ env.ALCHEMY_STATE_TOKEN }}
          AWS_REGION: us-west-2
          CLOUDFLARE_ACCOUNT_ID: ${{ env.CLOUDFLARE_ACCOUNT_ID }}
          CLOUDFLARE_API_KEY: ${{ env.CLOUDFLARE_API_KEY }}
          CLOUDFLARE_EMAIL: ${{ env.CLOUDFLARE_EMAIL }}
          GENERATE_OG_IMAGES: true
          STAGE: prod
